import{av as i,m as a,p as l,aR as t}from"./chunks/framework.C1aPebBI.js";const b=JSON.parse('{"title":"uuid","description":"","frontmatter":{},"headers":[],"relativePath":"zh/utils/uuid.md","filePath":"zh/utils/uuid.md"}'),e={name:"zh/utils/uuid.md"},u=t('<h1 id="uuid" tabindex="-1">uuid <a class="header-anchor" href="#uuid" aria-label="Permalink to &quot;uuid&quot;">​</a></h1><blockquote><p>提供两个函数都是生成唯一标识符的实用工具，可以在各种场景下使用，例如为对象生成唯一ID、为文件生成唯一名称等。</p></blockquote><h2 id="builduuid" tabindex="-1">buildUUID <a class="header-anchor" href="#builduuid" aria-label="Permalink to &quot;buildUUID&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>生成一个UUID（通用唯一标识符）。UUID是一种常用于识别对象的唯一标识符，通常由32个十六进制数字组成，并以连字符分隔。 通过循环36次来生成一个UUID，每次循环都会根据特定的规则添加一个十六进制数字或者连字符到UUID中。其中：</p><ul><li>当循环的迭代次数为9、14、19和24时，添加一个连字符-。</li><li>当循环的迭代次数为15时，添加四个十六进制数字。</li><li>当循环的迭代次数为20时，添加一个介于8和11之间的十六进制数字。</li><li>其他情况下，添加一个介于0和15之间的十六进制数字。 最后，使用replace方法将UUID中的连字符-替换为空字符，得到一个不包含连字符的UUID。</li></ul></div><h2 id="buildshortuuid" tabindex="-1">buildShortUUID <a class="header-anchor" href="#buildshortuuid" aria-label="Permalink to &quot;buildShortUUID&quot;">​</a></h2><h3 id="params" tabindex="-1">params <a class="header-anchor" href="#params" aria-label="Permalink to &quot;params&quot;">​</a></h3><ul><li><code>{string} prefix</code>：前缀</li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>生成一个简短的唯一标识符。这个标识符由一个可选的前缀、一个随机数、一个递增的唯一值和一个时间戳组成。</p><ul><li>首先获取当前时间的时间戳，然后生成一个随机数，</li><li>接着递增一个全局唯一的值unique，</li><li>最后将前缀、随机数、唯一值和时间戳拼接成一个字符串，并返回。 你可以通过传递一个可选的前缀参数来自定义标识符的前缀。如果不传递前缀，那么默认前缀为空字符串。</li></ul></div>',8),o=[u];function d(s,r,c,h,n,p){return a(),l("div",null,o)}const m=i(e,[["render",d]]);export{b as __pageData,m as default};
