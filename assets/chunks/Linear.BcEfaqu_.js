function f(n,e,o){let t=m(n,o);return t<0&&(t=-t-2),t=Math.max(0,Math.min(t,e.length-1)),h(e[t],o-n[t])}function h(n,e){const o=n.length;if(o==0)return 0;let t=n[o-1];for(let r=o-2;r>=0;r--)t=e*t+n[r];return t}function u(n){let e=n.length;for(;e>1&&n[e-1]==0;)e--;return e==n.length?n:n.subarray(0,e)}function s(n){for(let e=0;e<n.length;e++){if(!isFinite(n[e]))throw new Error("Non-finite number detected.");if(e>0&&n[e]<=n[e-1])throw new Error("Number sequence is not strictly increasing.")}}function m(n,e){let o=0,t=n.length-1;for(;o<=t;){const r=o+t>>>1,i=n[r];if(i<e)o=r+1;else if(i>e)t=r-1;else{if(i==e)return r;throw new Error("Invalid number encountered in binary search.")}}return-(o+1)}function w(n,e){const o=a(n,e),t=Float64Array.from(n);return r=>f(t,o,r)}function a(n,e){if(n.length!=e.length)throw new Error("Dimension mismatch.");if(n.length<2)throw new Error("Number of points is too small.");s(n);const o=n.length-1,t=new Array(o);for(let r=0;r<o;r++){const i=n[r+1]-n[r],c=(e[r+1]-e[r])/i,l=new Float64Array(2);l[0]=e[r],l[1]=c,t[r]=u(l)}return t}export{w as c};
