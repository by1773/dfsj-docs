import{_ as t,o as e,c as o,aR as d}from"./chunks/framework.MvfB4Ynr.js";const b=JSON.parse('{"title":"通用的配置和数据转换","description":"","frontmatter":{},"headers":[],"relativePath":"zh/echarts/useAssist.md","filePath":"zh/echarts/useAssist.md"}'),a={name:"zh/echarts/useAssist.md"},s=d('<h1 id="通用的配置和数据转换" tabindex="-1">通用的配置和数据转换 <a class="header-anchor" href="#通用的配置和数据转换" aria-label="Permalink to &quot;通用的配置和数据转换&quot;">​</a></h1><blockquote><p>目前所有的图表都是以hooks的创建方式执行。初始化以后返回<code>useEcharts</code> 以外，还附带了<code>createOptions</code> 、<code>assemble</code>、<code>toggleTable</code> 、<code>toggleStatistic</code>额外的方法供分析或者更换配置、转换结果。</p></blockquote><blockquote><p><code>useAssist</code> 返回一个 <code>getExistConfig</code> 方法，目前包含<span style="color:red;">水库水文站实时预报数据</span>的配置，返回一个包含<code>createOptions</code> <code>transform</code>的对象。</p></blockquote><h2 id="方法" tabindex="-1">方法 <a class="header-anchor" href="#方法" aria-label="Permalink to &quot;方法&quot;">​</a></h2><table><thead><tr><th>方法名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>assemble</td><td>组装</td><td>(value: T, options: EChartsOption) =&gt; void</td></tr><tr><td>toggleTable</td><td>切换表格</td><td>() =&gt; void</td></tr><tr><td>toggleStatistic</td><td>切换分析</td><td>() =&gt; void</td></tr><tr><td>createOptions</td><td>生成自定义配置</td><td>(data:T) =&gt; EChartsOption</td></tr><tr><td>transform</td><td>转换后台的数据结构</td><td>(data：T) =&gt; T</td></tr></tbody></table>',5),r=[s];function c(i,n,h,l,_,p){return e(),o("div",null,r)}const g=t(a,[["render",c]]);export{b as __pageData,g as default};
